# Simple configuration for an HTTP/HTTPS proxy listening on ports 80 and 443
# on all  interfaces and forwarding requests to a single backend "servers" that
# routes traffic to docker replicated services "node-server".
global
    daemon
    maxconn 1000000
    tune.ssl.cachesize 1000000
    # Run a single HAProxy process (1) with 4 threads (1-4) mapped to first
    # four CPU cores (0-3)
    nbproc 1
    nbthread 4
    cpu-map auto:1/1-4 0-3

    ssl-default-bind-options ssl-min-ver TLSv1.3
    ssl-default-bind-ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:TLS_AES_128_CCM_8_SHA256:TLS_AES_128_CCM_SHA256

defaults
    mode http
    timeout connect 5000ms
    timeout client 50000ms
    timeout server 50000ms

frontend myfrontend
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/hackathon.pem
    default_backend servers

frontend stats
    bind *:8404
    stats enable
    stats uri /stats
    stats refresh 10s

backend servers
    fullconn 1000000
    balance roundrobin
    # The server-template directive will add the specified number of servers,
    # which in this case is 20, to the backend. Their names will be prefixed
    # with "node-"
    # See also:
    # https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#5.2-init-addr
    server-template node- 20 node-server:8080 check resolvers docker init-addr libc,none maxconn 50000

# Docker specific
# More info here: https://cbonte.github.io/haproxy-dconv/2.0/configuration.html#5.3.2
resolvers docker
    # The Docker Swarm DNS service is always available at 127.0.0.11
    nameserver dns1 127.0.0.11:53
    resolve_retries 3
    timeout resolve 1s
    timeout retry   1s
    hold other      10s
    hold refused    10s
    hold nx         10s
    hold timeout    10s
    hold valid      10s
    hold obsolete   10s